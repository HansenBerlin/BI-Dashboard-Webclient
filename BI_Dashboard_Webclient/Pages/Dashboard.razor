@page "/"
@using BI_Core
@using BI_Dashboard_Webclient.Components
@using Infrastructure

<MudContainer Class="mt-16 px-16" MaxWidth="MaxWidth.False">
    <MudText Typo="Typo.h2">Dashboard Bestand</MudText>
    <MudGrid Style="margin-top: 30px;">
        <MudItem xs="12" sm="6" md="3">
            <DashboardSmall Icon="@Icons.Material.Filled.HolidayVillage" Name="Anzahl Wohnungen" Value="@_data.TotalApartments.ToString()"/>
        </MudItem>
        <MudItem xs="12" sm="6" md="3">
            <DashboardSmall Icon="@Icons.Material.Filled.AttachMoney" Name="Kaltmieten/M. in Mio. €" Value="@($"{(double) _data.TotalBaseRentIncomePerMonth / 1000000:0.00}")"/>
        </MudItem>
        <MudItem xs="12" sm="6" md="3">
            <DashboardSmall Icon="@Icons.Material.Filled.AccessTime" Name="Hausalter in Jahren Ø" Value="@(_data.AverageHouseAge.ToString())"/>
        </MudItem>
        <MudItem xs="12" sm="12" md="3">
            <DashboardSmall Icon="@Icons.Material.Filled.Payments" Name="Kaltmiete Ø in €" Value="@(_data.AverageBaseRent.ToString())"/>
        </MudItem>
        <MudItem xs="12" sm="3">
            <MudPaper Elevation="2" Class="pa-8" Style="height: 400px; display: flex; flex-direction: column;">
                <div style="display: flex; margin-bottom: 32px;" x>
                    <MudImage Height="150" Src="assets/hai.png" Elevation="0"/>
                    <MudText Style="font-size: 2rem; padding-left: 32px;" 
                             Typo="Typo.h2" >Miethai-Motto <br/>der Woche</MudText>
                </div>
                <MudText Typo="Typo.h5">@_mottos[new Random().Next(0, _mottos.Count - 1)]</MudText>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="5">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 400px;">
                <h2 style="padding: 10px; text-align: right;">High- und Low-Performer</h2>
                <MudChart LegendPosition="Position.Right"
                          ChartType="ChartType.Pie"
                          InputData="@_plotData"
                          InputLabels="@_labels"
                          Width="300px" Height="300px"
                          ChartOptions="_chartOptions"/>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 400px;">
                <h2 style="padding: 10px;">Häufigste(r)...</h2>
                <div class="dashboard-card-merged">
                    <MudIcon Style="font-size: 3.5rem;"
                             Icon="@Icons.Material.Filled.Outbound"
                             Color="Color.Primary"/>
                    <div style="margin-left: 10px;">
                        <p style="font-size: 1rem; line-height: 1;">Heizungstyp</p>
                        <h4 style="line-height: 1.1;">@_data.MostCommonHeatingType</h4>
                    </div>
                </div>
                <div class="dashboard-card-merged">
                    <MudIcon Style="font-size: 3.5rem;"
                             Icon="@Icons.Material.Filled.Outbound"
                             Color="Color.Primary"/>
                    <div style="margin-left: 10px;">
                        <p style="font-size: 1rem; line-height: 1;">Wohungstyp</p>
                        <h4 style="line-height: 1.1;">@_data.MostCommonTypeOfFlat</h4>
                    </div>
                </div>
                <div class="dashboard-card-merged">
                    <MudIcon Style="font-size: 3.5rem;"
                             Icon="@Icons.Material.Filled.Outbound"
                             Color="Color.Primary"/>
                    <div style="margin-left: 10px;">
                        <p style="font-size: 1rem; line-height: 1;">Zustand</p>
                        <h4 style="line-height: 1.1;">@_data.MostCommonCondition</h4>
                    </div>
                </div>
                <div class="dashboard-card-merged">
                    <MudIcon Style="font-size: 3.5rem;"
                             Icon="@Icons.Material.Filled.Outbound"
                             Color="Color.Primary"/>
                    <div style="margin-left: 10px;">
                        <p style="font-size: 1rem; line-height: 1;">Qualität</p>
                        <h4 style="line-height: 1.1;">@_data.MostCommonInteriorQual</h4>
                    </div>
                </div>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code
{
    [Inject]
    public Repository<RentDashboardModel> Repository { get; set; }

    private RentDashboardModel _data = new();

    private readonly List<string> _mottos = new()
    {
        "We don't just rent apartments, we take a bite out of the competition.",
        "Our rentals are like a shark attack: sudden, vicious, and impossible to forget.",
        "We're not just a real estate company, we're the apex predators of the rental market.",
        "When you rent with us, the only thing you have to fear is your bank account balance.",
        "We're not for the faint of heart, but we're definitely for the deep of wallet.",
        "Our company motto: 'squeeze them until they're dry, then squeeze some more.",
        "With our rentals, you'll be living the dream of paying for someone else's yacht.",
        "If we can't squeeze blood from a stone, we'll just find a bigger stone.",
        "Renting just got more ruthless with us.",
        "Renting with us is like winning the lottery, except the prize is a lifetime of debt.",
        "Our rentals are like a toxic relationship, but with more paperwork and less love."
    };
    //3486, 37850, 23500, 52
    private readonly double[] _plotData = { 3486, 20784, 39586, 1032 };
    private readonly string[] _labels = { "High Peformer", "unbedenklich", "Teilrisiken", "hochkritisch" };

    private readonly ChartOptions _chartOptions = new()
    {
        ChartPalette = new []
        {
            Colors.BlueGrey.Lighten4, 
            Colors.BlueGrey.Lighten2, 
            Colors.BlueGrey.Darken1, 
            Colors.BlueGrey.Darken3
        }
    };
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            const string url = "http://localhost:6002/rentdata/dashboard";
            Repository.Init(url);
            var data = await Repository.GetAll();
            _data = data.First();
            StateHasChanged();
        }
    }

}
