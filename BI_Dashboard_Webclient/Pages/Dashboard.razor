@page "/"
@using BI_Core
@using BI_Dashboard_Webclient.Components

<MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.False">
    <MudText Typo="Typo.h2">Dashboard Bestand</MudText>
    <MudGrid Style="margin-top: 30px;">
        <MudItem xs="12" sm="6" md="3">
            <DashboardSmall Icon="@Icons.Material.Filled.HolidayVillage" Name="Anzahl Wohnungen" Value="@_data.TotalApartments.ToString()"/>
        </MudItem>
        <MudItem xs="12" sm="6" md="3">
            <DashboardSmall Icon="@Icons.Material.Filled.AttachMoney" Name="Kaltmieten/M. in Mio. €" Value="@($"{(double) _data.TotalBaseRentIncomePerMonth / 1000000:0.00}")"/>
        </MudItem>
        <MudItem xs="12" sm="6" md="3">
            <DashboardSmall Icon="@Icons.Material.Filled.AccessTime" Name="Hausalter in Jahren Ø" Value="@(_data.AverageHouseAge.ToString())"/>
        </MudItem>
        <MudItem xs="12" sm="12" md="3">
            <DashboardSmall Icon="@Icons.Material.Filled.Payments" Name="Kaltmiete Ø in €" Value="@(_data.AverageBaseRent.ToString())"/>
        </MudItem>
        <MudItem xs="12" sm="8">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 400px;">
                <MudChart 
                     LegendPosition="Position.Left"
                    ChartType="ChartType.Bar" 
                    ChartSeries="@_series" 
                    XAxisLabels="@_xAxisLabels" 
                    Width="100%" 
                    Height="400px">
                </MudChart>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 400px;">
                <h2 style="padding: 10px;">Häufigste(r)...</h2>
                <div class="dashboard-card-merged">
                    <MudIcon Style="font-size: 3.5rem;"
                             Icon="@Icons.Material.Filled.Outbound"
                             Color="Color.Primary"/>
                    <div style="margin-left: 10px;">
                        <p style="font-size: 1rem; line-height: 1;">Heizungstyp</p>
                        <h4 style="line-height: 1.1;">@_data.MostCommonHeatingType</h4>
                    </div>
                </div>
                <div class="dashboard-card-merged">
                    <MudIcon Style="font-size: 3.5rem;"
                             Icon="@Icons.Material.Filled.Outbound"
                             Color="Color.Primary"/>
                    <div style="margin-left: 10px;">
                        <p style="font-size: 1rem; line-height: 1;">Wohungstyp</p>
                        <h4 style="line-height: 1.1;">@_data.MostCommonTypeOfFlat</h4>
                    </div>
                </div>
                <div class="dashboard-card-merged">
                    <MudIcon Style="font-size: 3.5rem;"
                             Icon="@Icons.Material.Filled.Outbound"
                             Color="Color.Primary"/>
                    <div style="margin-left: 10px;">
                        <p style="font-size: 1rem; line-height: 1;">Zustand</p>
                        <h4 style="line-height: 1.1;">@_data.MostCommonCondition</h4>
                    </div>
                </div>
                <div class="dashboard-card-merged">
                    <MudIcon Style="font-size: 3.5rem;"
                             Icon="@Icons.Material.Filled.Outbound"
                             Color="Color.Primary"/>
                    <div style="margin-left: 10px;">
                        <p style="font-size: 1rem; line-height: 1;">Qualität</p>
                        <h4 style="line-height: 1.1;">@_data.MostCommonInteriorQual</h4>
                    </div>
                </div>
                




            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code
{
    [Inject]
    public Repository<RentDashboardModel, RentDashboardModel> Repository { get; set; }

    
    private RentDashboardModel _data = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            const string url = "https://localhost:6001/rentdata/dashboard";
            Repository.Init(url);
            var data = await Repository.GetAll();
            _data = data.First();
            StateHasChanged();
        }
    }

    private readonly List<ChartSeries> _series = new()
    {
        new ChartSeries { Name = "Anteil NK an Gesamtmiete", Data = new[] { 0.15 * 100, 0.16 * 100, 0.17 * 100, 0.17 * 100, 0.17 * 100, 
            0.17 * 100, 0.18 * 100, 0.19 * 100, 0.2 * 100, 0.21 * 100, 0.21 * 100, 0.21 * 100, 0.22 * 100}}
    };

    private readonly string[] _xAxisLabels = {
        "Solarheizung",
        "Wärmepumpe",
        "Holzpellet-Heizung",
        "Fußbodenheizung",
        "Autarke Zentralheizung",
        "Ofenheizung",
        "Elektroheizung",
        "Kraft-Wärme-Kopplungsanlage",
        "Nachtspeicherheizung",
        "Zentralheizung",
        "Gasheizung",
        "Ölheizung",
        "Fernwärme"
    };
}
